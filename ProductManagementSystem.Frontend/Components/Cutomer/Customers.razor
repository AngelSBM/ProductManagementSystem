@page "/customers"

@using CurrieTechnologies.Razor.SweetAlert2
@using ProductManagementSystem.Frontend.Services
@using ProductManagementSystem.Shared.DTOs

@inject SweetAlertService Swal
@inject ICustomerService customerService
@inject NavigationManager Navigation

<div class="row">
    <div class="col-6">
        <h3>Customers</h3>
    </div>
    <div class="col-6 d-flex justify-content-end">        
        <a class="btn btn-success btm-sm mb-3 " href="customer/0">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-plus" viewBox="0 0 16 16">
                <path d="M8 6.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 .5-.5" />
                <path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5z" />
            </svg>
            New customer
        </a>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Phone</th>
            <th>Email</th>
            <th>Status</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (customers is null)
        {
            <tr>
                <td colspan="5" align="center">
                    No customers
                </td>
            </tr>
        }
        else
        {
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Name</td>
                    <td>@customer.Phone</td>
                    <td>@customer.Email</td>
                    <td>
                        @if (@customer.Active)
                        {
                            <span>Active</span>
                        }
                        else
                        {
                            <span>Inactive</span>
                        }                                                    
                    </td>
                    <td>
                        <a class="btn btn-primary btn-sm" href="customer-information/@customer.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list-check" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3.854 2.146a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 3.293l1.146-1.147a.5.5 0 0 1 .708 0m0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 1 1 .708-.708L2 7.293l1.146-1.147a.5.5 0 0 1 .708 0m0 4a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0l-.5-.5a.5.5 0 0 1 .708-.708l.146.147 1.146-1.147a.5.5 0 0 1 .708 0" />
                            </svg>
                        </a>
                        <a class="btn btn-primary btn-sm" href="customer/@customer.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-bounding-box" viewBox="0 0 16 16">
                                <path d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5M.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5m15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5" />
                                <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
                            </svg>
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => DeleteCustomer(customer))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-person-x" viewBox="0 0 16 16">
                                <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0M8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4m.256 7a4.5 4.5 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10q.39 0 .74.025c.226-.341.496-.65.804-.918Q8.844 9.002 8 9c-5 0-6 3-6 4s1 1 1 1z" />
                                <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7m-.646-4.854.646.647.646-.647a.5.5 0 0 1 .708.708l-.647.646.647.646a.5.5 0 0 1-.708.708l-.646-.647-.646.647a.5.5 0 0 1-.708-.708l.647-.646-.647-.646a.5.5 0 0 1 .708-.708" />
                            </svg>
                        </button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    IEnumerable<CustomerDto> customers = null;


    protected override async Task OnInitializedAsync()
    {
        customers = await customerService.GetCustomersAsync();

    }

    private async Task DeleteCustomer(CustomerDto customerToDelete)
    {
        var prompt = await Swal.FireAsync(new SweetAlertOptions()
            {
                Title = customerToDelete.Name,
                Text = "Are you sure you want to Inactivate this customer?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (prompt.IsConfirmed)
        {
            await customerService.DeleteCustomerAsync(customerToDelete.Id);
            await Swal.FireAsync(new SweetAlertOptions()
                {
                    Title = customerToDelete.Name,
                    Text = "Se ha desativado el usuario",
                    Icon = SweetAlertIcon.Info
                });

            foreach (var customer in customers)
                if (customer.Id == customerToDelete.Id)
                    customer.Active = false;
        }

    }

}
